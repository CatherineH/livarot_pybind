cmake_minimum_required(VERSION 3.20)
project(LivarotPy)

include(FindPython3)
# TODO: try specifying a specific version in find_package(Python3)
IF (WIN32)
  set(PYTHON_INCLUDE_DIRS C:\\Program\ Files\\Python39\\include)
  set(Python_LIBRARIES C:\\Program\ Files\\Python39\\libs)
  set(PYTHON_LIBRARY C:\\Program\ Files\\Python39\\libs\\python3.lib)
  set(Python_EXECUTABLE C:\\Program\ Files\\Python39\\python.exe)
ENDIF()
message("cmake before PYTHON_LIBRARIES ${PYTHON_LIBRARIES}")
message("cmake before PYTHON_EXECUTABLE ${PYTHON_EXECUTABLE}")
message("cmake before PYTHON_INCLUDE_DIRS ${PYTHON_INCLUDE_DIRS}")
IF(NOT DEFINED PYTHON_LIBRARIES)
  find_package(PythonLibs REQUIRED)
ENDIF()
find_package(Boost 1.60 REQUIRED)
IF(NOT DEFINED PYTHON_EXECUTABLE)
  find_package(Python3 REQUIRED COMPONENTS Interpreter Development)
ELSE()
  set(Python3_INCLUDE_DIR ${PYTHON_INCLUDE_DIRS})
  set(Python3_LIBRARY ${PYTHON_LIBRARIES})
  set(Python3_EXECUTABLE ${PYTHON_EXECUTABLE})
  message("calling Python3 find_package Python3_EXECUTABLE ${Python3_EXECUTABLE} Python3_INCLUDE_DIRS ${Python3_INCLUDE_DIR} PYTHON_INCLUDE_DIRS ${PYTHON_INCLUDE_DIRS} Python3_LIBRARY ${Python3_LIBRARY} PYTHON_LIBRARIES ${PYTHON_LIBRARIES}")
  find_package(Python3 REQUIRED COMPONENTS Development)
ENDIF()
message("cmake after PYTHON_LIBRARIES ${PYTHON_LIBRARIES}")
message("cmake after PYTHON_EXECUTABLE ${PYTHON_EXECUTABLE}")
message("cmake after PYTHON_INCLUDE_DIRS ${PYTHON_INCLUDE_DIRS}")
add_subdirectory(pybind11)


find_package(PkgConfig REQUIRED)
pkg_check_modules(2Geom 2geom>=1.1.0)
pkg_check_modules(GSL REQUIRED gsl)
pkg_check_modules(glib glib-2.0)
add_subdirectory(livarot)

message("2geom libraries ${2Geom_INCLUDE_DIRS}")
#python3_add_library(pylivarot MODULE livarot_pybind.cpp)
pybind11_add_module(_pylivarot MODULE livarot_pybind.cpp)
set_property(TARGET _pylivarot PROPERTY CXX_STANDARD 17)
target_include_directories(_pylivarot PUBLIC ${Python3_INCLUDE_DIRS} ${2Geom_INCLUDE_DIRS} livarot) 

target_link_directories(_pylivarot PUBLIC ${2Geom_LIBDIRS})
target_link_libraries(_pylivarot PUBLIC 2geom livarot gsl)
get_property(dirs TARGET _pylivarot PROPERTY LINK_DIRECTORIES)
message("pylivarot link_directories")
foreach(dir ${dirs})
  message("dir='${dir}'")
endforeach()

get_property(dirs TARGET _pylivarot PROPERTY LINK_LIBRARIES)
message("pylivarot link_libraries")
foreach(dir ${dirs})
  message("lib='${dir}'")
endforeach()

target_compile_definitions(_pylivarot PRIVATE)
